<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd" default-lazy-init="true">
	
	<description>项目参数配置</description>

	<!-- 导入模块配置 -->
	<import resource="classpath:spring/applicationContext-datasource.xml" />
	<import resource="classpath:spring/applicationContext-module-base.xml" />
	<import resource="classpath:spring/applicationContext-module-commons.xml" />
	<import resource="classpath:spring/applicationContext-module-mybatis.xml" />
	<!-- <import resource="classpath:spring/applicationContext-module-shiro.xml"/> <import resource="classpath:spring/applicationContext-module-jcaptcha.xml"/> -->
	<!-- 导入插件配置 -->
	<import resource="classpath:spring/applicationContext-plugin-audit.xml" />
	<import resource="classpath:spring/applicationContext-plugin-jobs.xml"/>
	<!-- <import resource="classpath:spring/applicationContext-plugin-authsdk3.xml"/> -->

	<!-- <import resource="classpath:spring/applicationContext-plugin-authsdk4.xml"/> -->
	<import resource="classpath:spring/applicationContext-module-jedis.xml" />

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.cesgroup.prison.**.service,com.cesgroup.prison.**.service.impl,com.cesgroup.prison.**.utils,com.cesgroup.prison.common.cache,com.cesgroup.scrap.db,com.cesgroup.prison.config" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
        <context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration" />
        <context:include-filter type="annotation" expression="javax.servlet.annotation.WebFilter" />
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<!-- Mybatis的实体类扫描路径 -->
	<bean class="com.cesgroup.framework.base.config.ConfigItem">
		<property name="name" value="entityPackage"></property>
		<property name="value" value="com.cesgroup.prison.**.entity"></property>
	</bean>

	<!-- Mybatis的DAO扫描路径 -->
	<bean class="com.cesgroup.framework.base.config.ConfigItem">
		<property name="name" value="repositoryPackage"></property>
		<property name="value" value="com.cesgroup.prison.**.dao"></property>
	</bean>

	<!-- 数据库类型 -->
	<!-- <bean id="com.cesgroup.framework.persistence.dialect" class="java.lang.String"> <constructor-arg index="0" value="mysql"/> </bean> -->
	<!-- 最大上传文件大小 -->
	<!-- <bean id="com.cesgroup.framework.view.maxUploadSize" class="java.lang.Long"> <constructor-arg index="0" value="10485760"/> </bean> -->
	<!-- Shiro的默认登录页面 -->
	<!-- <bean id="com.cesgroup.framework.security.successUrl" class="java.lang.String"> <constructor-arg index="0" value="/index.jsp"/> </bean> -->
	<!-- 操作日志记录级别：OFF,FATAL,ERROR,WARN,INFO,DEBUG,TRACE,ALL，默认INFO -->
	<!-- <bean id="com.cesgroup.framework.logger.level" class="java.lang.String"> <constructor-arg index="0" value="INFO"/> </bean> -->
	<!-- 在多日志接口的情况下指定日志接口 -->
	<!-- <bean id="com.cesgroup.framework.logger.loggerServiceName" class="java.lang.String"> <constructor-arg index="0" value="defaultLoggerService"/> </bean> -->
	<!-- 默认每页记录数 -->
	<!-- <bean id="com.cesgroup.framework.search.defaultPagesize" class="java.lang.Integer"> <constructor-arg index="0" value="20"/> </bean> -->
	<!-- 默认当前页号参数名称 -->
	<!-- <bean id="com.cesgroup.framework.search.defaultPageNumberParam" class="java.lang.String"> <constructor-arg index="0" value="P_pageNumber"/> </bean> -->
	<!-- 默认每页记录数参数名称 -->
	<!-- <bean id="com.cesgroup.framework.search.defaultPageSizeParam" class="java.lang.String"> <constructor-arg index="0" value="P_pagesize"/> </bean> -->
	<!-- 默认排序参数名称（排序字段,[排序字段,排序方式],[排序字段]） -->
	<!-- <bean id="com.cesgroup.framework.search.defaultOrderParam" class="java.lang.String"> <constructor-arg index="0" value="P_orders"/> </bean> -->
	<!-- session超时时间，默认30分钟 -->
	<!-- <bean id="com.cesgroup.framework.security.sessionTimeout" class="java.lang.Long"> <constructor-arg index="0" value="1800000"/> </bean> -->
	<!-- 记住我cookie超时时间，默认7天 -->
	<!-- <bean id="com.cesgroup.framework.security.rememberMeTimeout" class="java.lang.Long"> <constructor-arg index="0" value="604800"/> </bean> -->
	<!-- 数据库ID键值对（xx=xx,xx=xx），已经默认添加了SQL Server=sqlserver、DB2=db2、Oracle=oracle、MySQL=mysql、H2=h2 -->
	<!-- <bean id="com.cesgroup.framework.persistence.databaseId" class="java.lang.String"> <constructor-arg index="0" value="DM=dm,Gbase=gbase"/> </bean> -->
	<!-- 默认是否允许超出页码范围参数名称，此参数会覆盖“是否允许超出页码范围全局设置” -->
	<bean id="com.cesgroup.framework.search.defaultAllowPageNumberOverflowParam" class="java.lang.String">
		<constructor-arg index="0" value="P_allowPageNumberOverflow" />
	</bean>
	<!-- 是否允许超出页码范围全局设置，默认为false。默认时超出页码范围显示最后一页；true时，超出范围显示为空。 -->
	<bean id="com.cesgroup.framework.search.allowPageNumberOverflow" class="java.lang.Boolean">
		<constructor-arg index="0" value="false" />
	</bean>

	<!-- 是否启动系统中的权限验证，如果为启用，则对系统中的所有权限标签的资源进行验证；不启用，则统一忽略标签进行显示 -->
	<bean id="com.cesgroup.security.environment.open" class="java.lang.Boolean">
		<constructor-arg index="0" value="flase" />
	</bean>


	<!--使用httpclient的实现，带连接池 -->
	<!--在httpclient4.3版本后才有 -->
	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder" factory-method="create">
		<property name="connectionManager">
			<bean class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
				<!--整个连接池的并发 -->
				<property name="maxTotal" value="50" />
				<!--每个主机的并发 -->
				<property name="defaultMaxPerRoute" value="50" />
			</bean>
		</property>
		<!--开启重试 -->
		<property name="retryHandler">
			<bean class="org.apache.http.impl.client.DefaultHttpRequestRetryHandler">
				<constructor-arg value="2" />
				<constructor-arg value="true" />
			</bean>
		</property>
		<property name="defaultHeaders">
			<list>
				<bean class="org.apache.http.message.BasicHeader">
					<constructor-arg value="Content-Type" />
					<constructor-arg value="text/html;charset=UTF-8" />
				</bean>
				<bean class="org.apache.http.message.BasicHeader">
					<constructor-arg value="Accept-Encoding" />
					<constructor-arg value="gzip,deflate" />
				</bean>
				<bean class="org.apache.http.message.BasicHeader">
					<constructor-arg value="Accept-Language" />
					<constructor-arg value="zh-CN" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="httpClient" factory-bean="httpClientBuilder" factory-method="build" />

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list value-type="org.springframework.http.converter.HttpMessageConverter">
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<value>text/html;charset=UTF-8</value>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<value>application/json;charset=UTF-8</value>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
				<bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter" />
			</list>
		</property>
		<property name="requestFactory">
			<bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
				<constructor-arg ref="httpClient" />
				<!--连接时间(毫秒) -->
				<property name="connectTimeout" value="20000" />
				<!--读取时间(毫秒) -->
				<property name="readTimeout" value="20000" />
			</bean>
		</property>
	</bean>


</beans>